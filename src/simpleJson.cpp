 /***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Introduction
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

/**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************//**
 * @file      simpleJson.cpp
 * 
 * @version   1.0
 *
 * @date      29-12-2024
 *
 * @brief     Simple functions to use the json data format.
 * 
 * @author    Fábio D. Pacheco, 
 * @email     fabio.d.pacheco@inesctec.pt or pacheco.castro.fabio@gmail.com
 *
 * @copyright Copyright (c) [2024] [Fábio D. Pacheco]
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Imported libraries
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include "simpleJson.h"

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * Functions
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
uint8_t 
jsonCheck( const char * json ){
  uint8_t prove = 0;  
  for( uint16_t i = 0 ; i < strlen(json) ; ++i )
    switch( json[i] ){
      case '{':
        prove = 1;
        break;
    
      case '}':
        if( prove )
          return 1;
        break;
    }
  return 0;
}

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
char * 
jsonParse( const char * json, const char * key ){
  char * p = NULL;
  
  if( NULL == (p = (char *) strstr( json, key )))                              // Get the pointer to where it starts key text
    return NULL;
  
  if( NULL == (p = (char *) strchr( p, ':')))                                  // Get the pointer to where the first result to the key starts
    return NULL;

  p++;                                                                         // Jump to the next byte where it stars the result
  
  char * e = NULL;
  
  if( '"' != p[0] ){
    if( NULL == (e = (char *) strchr( p, ',')))                                // The end of the result
      if( NULL == (e = (char *) strchr( p, '}')))                              // If no comma look for }
        return NULL;
  }
  else{
    p++;
    if( NULL == (e = (char *) strchr( p, '"')))                                // The end of the result
      return NULL;
  }
  
  uint8_t n = e - p;                                                           // The amount of bytes correspondent to the result
  
  char * r = (char *) malloc( n + 1 );
  if( NULL == r )
    return NULL;

  memcpy( r, p, n );                                                           // Copy the result and add the null terminator
  r[n] = '\0';
  return r;
}

/***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************
 * End of file
 **************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/